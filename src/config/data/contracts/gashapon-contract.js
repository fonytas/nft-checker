import { Contract } from 'ethers'

const abi = [
    {
        type: 'constructor',
        stateMutability: 'nonpayable',
        inputs: [
            { type: 'address', name: 'adminRouter_', internalType: 'address' },
            { type: 'address', name: 'nftTransferRouter_', internalType: 'address' },
        ],
    },
    {
        type: 'event',
        name: 'CloseGashapon',
        inputs: [{ type: 'uint256', name: 'gashaponId', internalType: 'uint256', indexed: true }],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'CompleteGashapon',
        inputs: [
            { type: 'uint256', name: 'gashaponId', internalType: 'uint256', indexed: true },
            { type: 'address', name: 'userAddressComplete', internalType: 'address', indexed: true },
            { type: 'uint256', name: 'amount', internalType: 'uint256', indexed: false },
            { type: 'address[]', name: 'nftTokenRewardAddressComplete', internalType: 'address[]', indexed: false },
            { type: 'uint256[]', name: 'nftTokenRewardIdComplete', internalType: 'uint256[]', indexed: false },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'CreateGashapon',
        inputs: [
            { type: 'uint256', name: 'gashaponId', internalType: 'uint256', indexed: true },
            { type: 'address', name: 'owner', internalType: 'address', indexed: true },
            { type: 'uint256', name: 'startTime', internalType: 'uint256', indexed: false },
            { type: 'uint256', name: 'endTime', internalType: 'uint256', indexed: false },
            { type: 'uint256', name: 'amount', internalType: 'uint256', indexed: false },
            { type: 'address', name: 'kap20TokenAddress', internalType: 'address', indexed: false },
            { type: 'uint256', name: 'price', internalType: 'uint256', indexed: false },
            { type: 'uint256', name: 'limit', internalType: 'uint256', indexed: false },
            { type: 'string', name: 'ipfs', internalType: 'string', indexed: false },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'ExportNftFromGashapon',
        inputs: [
            { type: 'uint256', name: 'gashaponId', internalType: 'uint256', indexed: true },
            { type: 'uint256', name: 'page', internalType: 'uint256', indexed: false },
            { type: 'uint256', name: 'limit', internalType: 'uint256', indexed: false },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'ExportNftFromGashaponByIndex',
        inputs: [
            { type: 'uint256', name: 'gashaponId', internalType: 'uint256', indexed: true },
            { type: 'uint256', name: 'startIndex', internalType: 'uint256', indexed: false },
            { type: 'uint256', name: 'stopIndex', internalType: 'uint256', indexed: false },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'ImportNftToGashapon',
        inputs: [
            { type: 'uint256', name: 'gashaponId', internalType: 'uint256', indexed: true },
            { type: 'address[]', name: 'nftTokenRewardAddress', internalType: 'address[]', indexed: false },
            { type: 'uint256[]', name: 'nftTokenRewardId', internalType: 'uint256[]', indexed: false },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'PauseForGashapon',
        inputs: [
            { type: 'uint256', name: 'gashaponId', internalType: 'uint256', indexed: true },
            { type: 'bool', name: 'isPause', internalType: 'bool', indexed: false },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'Paused',
        inputs: [{ type: 'address', name: 'account', internalType: 'address', indexed: false }],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'SetAdmin',
        inputs: [
            { type: 'address', name: 'oldAdmin', internalType: 'address', indexed: true },
            { type: 'address', name: 'newAdmin', internalType: 'address', indexed: true },
            { type: 'address', name: 'caller', internalType: 'address', indexed: true },
        ],
        anonymous: false,
    },
    {
        type: 'event',
        name: 'Unpaused',
        inputs: [{ type: 'address', name: 'account', internalType: 'address', indexed: false }],
        anonymous: false,
    },
    {
        type: 'function',
        stateMutability: 'view',
        outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
        name: 'INIT_ID',
        inputs: [],
    },
    {
        type: 'function',
        stateMutability: 'view',
        outputs: [{ type: 'string', name: '', internalType: 'string' }],
        name: 'PROJECT',
        inputs: [],
    },
    {
        type: 'function',
        stateMutability: 'view',
        outputs: [{ type: 'address', name: '', internalType: 'contract IAdminProjectRouter' }],
        name: 'adminRouter',
        inputs: [],
    },
    {
        type: 'function',
        stateMutability: 'nonpayable',
        outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
        name: 'approve',
        inputs: [
            { type: 'address', name: '_tokenAddress', internalType: 'address' },
            { type: 'address', name: '_spender', internalType: 'address' },
            { type: 'uint256', name: '_value', internalType: 'uint256' },
        ],
    },
    {
        type: 'function',
        stateMutability: 'nonpayable',
        outputs: [],
        name: 'closeGashaponNext',
        inputs: [
            { type: 'uint256', name: '_gashaponId', internalType: 'uint256' },
            { type: 'address', name: '_userAddress', internalType: 'address' },
            { type: 'uint256', name: '_feeAmount', internalType: 'uint256' },
        ],
    },
    {
        type: 'function',
        stateMutability: 'nonpayable',
        outputs: [],
        name: 'completeGashaponNext',
        inputs: [
            { type: 'uint256', name: '_gashaponId', internalType: 'uint256' },
            { type: 'address', name: '_userAddressComplete', internalType: 'address' },
            { type: 'uint256', name: '_amount', internalType: 'uint256' },
            { type: 'bytes32', name: '_randSeed', internalType: 'bytes32' },
        ],
    },
    {
        type: 'function',
        stateMutability: 'nonpayable',
        outputs: [],
        name: 'createGashaponNext',
        inputs: [
            { type: 'address', name: '_owner', internalType: 'address' },
            { type: 'uint256', name: '_startTime', internalType: 'uint256' },
            { type: 'uint256', name: '_endTime', internalType: 'uint256' },
            { type: 'uint256', name: '_amount', internalType: 'uint256' },
            { type: 'address', name: '_kap20TokenAddress', internalType: 'address' },
            { type: 'uint256', name: '_price', internalType: 'uint256' },
            { type: 'uint256', name: '_limit', internalType: 'uint256' },
            { type: 'uint256', name: '_feeAmount', internalType: 'uint256' },
            { type: 'string', name: '_ipfs', internalType: 'string' },
        ],
    },
    {
        type: 'function',
        stateMutability: 'nonpayable',
        outputs: [],
        name: 'exportNftFromGashapon',
        inputs: [
            { type: 'uint256', name: '_gashaponId', internalType: 'uint256' },
            { type: 'address', name: '_userAddress', internalType: 'address' },
            { type: 'uint256', name: '_page', internalType: 'uint256' },
            { type: 'uint256', name: '_limit', internalType: 'uint256' },
        ],
    },
    {
        type: 'function',
        stateMutability: 'nonpayable',
        outputs: [],
        name: 'exportNftFromGashaponByIndex',
        inputs: [
            { type: 'uint256', name: '_gashaponId', internalType: 'uint256' },
            { type: 'address', name: '_userAddress', internalType: 'address' },
            { type: 'uint256', name: '_startIndex', internalType: 'uint256' },
            { type: 'uint256', name: '_stopIndex', internalType: 'uint256' },
        ],
    },
    {
        type: 'function',
        stateMutability: 'view',
        outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
        name: 'getCurrentBuyPerAddress',
        inputs: [
            { type: 'uint256', name: '_gashaponId', internalType: 'uint256' },
            { type: 'address', name: '_userAddress', internalType: 'address' },
        ],
    },
    {
        type: 'function',
        stateMutability: 'view',
        outputs: [
            {
                type: 'tuple',
                name: '',
                internalType: 'struct INftGashapon.GashaponComplete',
                components: [
                    { type: 'address[]', name: 'userAddressComplete', internalType: 'address[]' },
                    { type: 'uint256[]', name: 'amountComplete', internalType: 'uint256[]' },
                ],
            },
        ],
        name: 'getGashaponCompleteByPage',
        inputs: [
            { type: 'uint256', name: '_gashaponId', internalType: 'uint256' },
            { type: 'uint256', name: '_page', internalType: 'uint256' },
            { type: 'uint256', name: '_limit', internalType: 'uint256' },
        ],
    },
    {
        type: 'function',
        stateMutability: 'view',
        outputs: [
            {
                type: 'tuple',
                name: '',
                internalType: 'struct INftGashapon.GashaponInfoWithoutRewardAndComplete',
                components: [
                    { type: 'uint256', name: 'gashaponId', internalType: 'uint256' },
                    { type: 'address', name: 'owner', internalType: 'address' },
                    { type: 'uint256', name: 'nftTokenRewardLength', internalType: 'uint256' },
                    { type: 'uint256', name: 'startTime', internalType: 'uint256' },
                    { type: 'uint256', name: 'endTime', internalType: 'uint256' },
                    { type: 'uint256', name: 'totalAmount', internalType: 'uint256' },
                    { type: 'uint256', name: 'currentAmount', internalType: 'uint256' },
                    { type: 'address', name: 'kap20TokenAddress', internalType: 'address' },
                    { type: 'uint256', name: 'price', internalType: 'uint256' },
                    { type: 'uint256', name: 'limit', internalType: 'uint256' },
                    { type: 'uint256', name: 'completeLength', internalType: 'uint256' },
                    { type: 'bool', name: 'isPause', internalType: 'bool' },
                    { type: 'bool', name: 'isClose', internalType: 'bool' },
                    { type: 'string', name: 'ipfs', internalType: 'string' },
                ],
            },
        ],
        name: 'getGashaponInfoById',
        inputs: [{ type: 'uint256', name: '_gashaponId', internalType: 'uint256' }],
    },
    {
        type: 'function',
        stateMutability: 'view',
        outputs: [
            {
                type: 'tuple',
                name: '',
                internalType: 'struct INftGashapon.GashaponReward',
                components: [
                    { type: 'address[]', name: 'nftTokenRewardAddress', internalType: 'address[]' },
                    { type: 'uint256[]', name: 'nftTokenRewardId', internalType: 'uint256[]' },
                ],
            },
        ],
        name: 'getGashaponRewardByPage',
        inputs: [
            { type: 'uint256', name: '_gashaponId', internalType: 'uint256' },
            { type: 'uint256', name: '_page', internalType: 'uint256' },
            { type: 'uint256', name: '_limit', internalType: 'uint256' },
        ],
    },
    {
        type: 'function',
        stateMutability: 'view',
        outputs: [{ type: 'uint256[]', name: '', internalType: 'uint256[]' }],
        name: 'getOpenGashaponIdAll',
        inputs: [],
    },
    {
        type: 'function',
        stateMutability: 'view',
        outputs: [{ type: 'uint256[]', name: '', internalType: 'uint256[]' }],
        name: 'getOpenGashaponIdByPage',
        inputs: [
            { type: 'uint256', name: '_page', internalType: 'uint256' },
            { type: 'uint256', name: '_limit', internalType: 'uint256' },
        ],
    },
    {
        type: 'function',
        stateMutability: 'nonpayable',
        outputs: [],
        name: 'importNftToGashapon',
        inputs: [
            { type: 'uint256', name: '_gashaponId', internalType: 'uint256' },
            { type: 'address', name: '_userAddress', internalType: 'address' },
            { type: 'address[]', name: '_nftTokenRewardAddress', internalType: 'address[]' },
            { type: 'uint256[]', name: '_nftTokenRewardId', internalType: 'uint256[]' },
        ],
    },
    {
        type: 'function',
        stateMutability: 'view',
        outputs: [{ type: 'address', name: '', internalType: 'contract INftTransferRouter' }],
        name: 'nftTransferRouter',
        inputs: [],
    },
    {
        type: 'function',
        stateMutability: 'nonpayable',
        outputs: [{ type: 'bytes4', name: '', internalType: 'bytes4' }],
        name: 'onKAP1155BatchReceived',
        inputs: [
            { type: 'address', name: '', internalType: 'address' },
            { type: 'address', name: '', internalType: 'address' },
            { type: 'uint256[]', name: '', internalType: 'uint256[]' },
            { type: 'uint256[]', name: '', internalType: 'uint256[]' },
            { type: 'bytes', name: '', internalType: 'bytes' },
        ],
    },
    {
        type: 'function',
        stateMutability: 'nonpayable',
        outputs: [{ type: 'bytes4', name: '', internalType: 'bytes4' }],
        name: 'onKAP1155Received',
        inputs: [
            { type: 'address', name: '', internalType: 'address' },
            { type: 'address', name: '', internalType: 'address' },
            { type: 'uint256', name: '', internalType: 'uint256' },
            { type: 'uint256', name: '', internalType: 'uint256' },
            { type: 'bytes', name: '', internalType: 'bytes' },
        ],
    },
    {
        type: 'function',
        stateMutability: 'nonpayable',
        outputs: [{ type: 'bytes4', name: '', internalType: 'bytes4' }],
        name: 'onKAP721Received',
        inputs: [
            { type: 'address', name: '', internalType: 'address' },
            { type: 'address', name: '', internalType: 'address' },
            { type: 'uint256', name: '', internalType: 'uint256' },
            { type: 'bytes', name: '', internalType: 'bytes' },
        ],
    },
    { type: 'function', stateMutability: 'nonpayable', outputs: [], name: 'pause', inputs: [] },
    {
        type: 'function',
        stateMutability: 'view',
        outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
        name: 'paused',
        inputs: [],
    },
    {
        type: 'function',
        stateMutability: 'nonpayable',
        outputs: [],
        name: 'setAdmin',
        inputs: [{ type: 'address', name: '_adminRouter', internalType: 'address' }],
    },
    {
        type: 'function',
        stateMutability: 'nonpayable',
        outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
        name: 'setApprovalForAll',
        inputs: [
            { type: 'address', name: '_tokenAddress', internalType: 'address' },
            { type: 'address', name: '_operator', internalType: 'address' },
            { type: 'bool', name: '_approved', internalType: 'bool' },
        ],
    },
    {
        type: 'function',
        stateMutability: 'nonpayable',
        outputs: [],
        name: 'setIsPauseForGashapon',
        inputs: [
            { type: 'uint256', name: '_gashaponId', internalType: 'uint256' },
            { type: 'bool', name: '_ispause', internalType: 'bool' },
        ],
    },
    {
        type: 'function',
        stateMutability: 'nonpayable',
        outputs: [],
        name: 'setNftTransferRouter',
        inputs: [{ type: 'address', name: '_nftTransferRouter', internalType: 'address' }],
    },
    {
        type: 'function',
        stateMutability: 'view',
        outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
        name: 'totalGashaponInfo',
        inputs: [],
    },
    {
        type: 'function',
        stateMutability: 'view',
        outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
        name: 'totalOpenGashaponId',
        inputs: [],
    },
    { type: 'function', stateMutability: 'nonpayable', outputs: [], name: 'unpause', inputs: [] },
]

export const gashaponContract = {
    address: process.env.REACT_APP_APP_ENV === 'production' ? '0xc3de1847531920169bffB75f406e32531F9aE119' : '',
    connect: (signerOrProvider) => new Contract(gashaponContract.address, abi, signerOrProvider),
    abi: abi,
}
